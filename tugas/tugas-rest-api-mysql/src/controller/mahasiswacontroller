const { connectionPool } = require("../config/db");

// CREATE
const createMahasiswa = (req, res) => {
  var { nama, mata_kuliah, nilai } = req.body;
  console.log(nama);
  console.log(mata_kuliah);
  console.log(nilai);

  let queryText = `INSERT INTO nilai_mahasiswa(nama, mata_kuliah, nilai, indeks_nilai, created_at,updated_at) VALUES ("${nama}", "${mata_kuliah}", ${nilai}, "${hitungIndeks(
    nilai
  )}", now(), now())`;

  connectionPool.query(queryText, (err, data) => {
    if (err) {
      console.log(err);
      return;
    }
  });
  res.json({ message: "Index nilai telah dibuat", status: "success" });
};

const hitungIndeks = (nilai) => {
  if (nilai >= 80) return 'A';
  if (nilai >= 70) return 'B';
  if (nilai >= 60) return 'C';
  if (nilai >= 50) return 'D';
  return 'E';
};


const getAllMahasiswa = (req, res) => {
  let queryText = `SELECT * FROM nilai_mahasiswa`;
  connectionPool.query(queryText, (err, data) => {
    if (err) {
      console.log(err);
      return res.status(500).json({ message: err.message });
    }
    res.json(data);
  });
};


const getMahasiswaById = (req, res) => {
  const { id } = req.params;
  let queryText = `SELECT * FROM nilai_mahasiswa WHERE id=${id}`;
  connectionPool.query(queryText, (err, data) => {
    if (err) {
      console.log(err);
      return res.status(500).json({ message: err.message });
    }
    if (data.length === 0) return res.status(404).json({ message: 'Data tidak ditemukan' });
    res.json(data[0]);
  });
};



const updateMahasiswa = (req, res) => {
  const { id } = req.params;
  const { nama, mata_kuliah, nilai } = req.body;

  if (nilai < 0 || nilai > 100) {
    return res.status(400).json({ message: 'Data nilai salah, harus antara 0-100' });
  }

  let queryText = `UPDATE nilai_mahasiswa 
                   SET nama="${nama}", mata_kuliah="${mata_kuliah}", nilai=${nilai}, indeks_nilai="${hitungIndeks(nilai)}", updated_at=now()
                   WHERE id=${id}`;

  connectionPool.query(queryText, (err, data) => {
    if (err) {
      console.log(err);
      return res.status(500).json({ message: err.message });
    }
    res.json({ message: 'Data berhasil diperbarui' });
  });
};



const deleteMahasiswa = (req, res) => {
  const { id } = req.params;

  let queryText = `DELETE FROM nilai_mahasiswa WHERE id=${id}`;

  connectionPool.query(queryText, (err, data) => {
    if (err) {
      console.log(err);
      return res.status(500).json({ message: err.message });
    }
    res.json({ message: 'Data berhasil dihapus' });
  });
};







module.exports = { createMahasiswa, getAllMahasiswa, getMahasiswaById, updateMahasiswa, deleteMahasiswa };
